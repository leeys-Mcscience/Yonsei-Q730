<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAewAAACCCAIAAAALwWypAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAGY1JREFUeF7tnWtX4kq0Re+vOm2DIKIIiMjbd2vbto9ubdtz//+Hu3Rf19nuQAR5
        SHSNMYdDKjuVSqUyq1IJ4X++/vOPEEKIjCKJCyFEhpHEhRAiw0jiQgiRYSRxIYTIMJK4EEJkGElcCCEy
        jCQuhBAZRhIXQogMI4kLIUSGkcSFECLDSOJCCJFhJHEhhMgwkrgQQmQYSVwIITKMJC6EEBlGEhdCiAwj
        iQshRIaRxIUQIsNI4kIIkWGWS+L5lZVCLjcpWCvkswx8pH0RQiwtSyTxYj4/6PUO9/YO9/cnYtDtYt2Q
        2/tSWl1FqUI5x6HX6ax+/RpyE0KIUSyRxHcbjWC08em2WiG3dyT35Uu33Q4lHJ/OMu2LEGLJWSKJPw7D
        E0Ybn5DbO5JfWdnr90Pxxmd/MNBgXAgxJpL47JHEhRALQxKfPZK4EGJhSOKzRxIXQiwMSXz2SOJCiIUh
        ic8eSVwIsTDmLnH4qFQo1CuVV5lGfCDk9p5sbUHEoXjjc7C3t721FfN8Sa1SWVtdleuFEHOUOAaku43G
        NDoT6ez3+62dHdRzqHkhxOdhXhJfLxanHFmLMRn0euW1tVD/QohPwlwkXioUgmjEXNE0+pupbW31u92T
        o6OL8/Prqytw/+fP//77L8A/+Pjj/Pxwb69RrRbz+dyXL2F1Id6duUi8N8WXzsXbGHS7mld5A+brcYDT
        v5+d6aJHLBuzl/hWuRz8IhZDuVgMx0K8SjD1q9zf37eazfwCh+QTXWMVdEH2+Zi9xDu7u0EuB3t7SNyu
        VsWsaDebqNVQz0gMx0K8SnC08fD3L/j34SGkE3g85DNbVnO5UqEw6PV+3dz0O52wNJD78qWYz1fK5W/H
        x7hcCEvFh2fGEkd7Sj7uvVkuhzAxPbVKJdQztB5ixKsEO6MaN9bX19fWQLlUqm5unhwdQeghDOPxYi4X
        spoVP75/v7u95UbTJb5eLF5fXf25u2PZQoD48Mxe4nsvJQ6zFObW3D85+4nnf0KAeBW6zxhqTAj98uIi
        RM6vtsOG0iWOAXiIDwHiw7MQiT/P0+VXVjbX18P3VsT4bJXL/u5lqGrARWJMggFHGXOtUPh7f+8jb66v
        Q8ys8FsBkrhIZ3ESzw2bLheT4ie+JfHpCQYcZUw07N83Nz7y9vfvOT3W6bcCJHGRzgIlnlgk3gZrWxKf
        nmDA8SWOkTgSQxjAtWa33f5+enp9dXV3e2vB/z484P+LHz9wyBAQVgHFfL7f7RrchPHj/JyLgN1TrW5u
        2sfjw8MQz0hjo1TyGyJrq6vt3d0f37///vXLbuHiUuPm6urk6KheraY8ftPc3mbmvU7HLg1RFdu12vnZ
        me0y9hSJ6OQY+f/x3S7zSWLP7HtGFV54JPHswdqWxKeH7jNGSby4usovARlo2CGmVCj8TEydDwXuCx0A
        zB5iRoG+AfGDXi+kj6LZaPgNAWy6Uasl79Z60AmNupUF7zMM3rfvQO0PBkwEJnHw62XPB4b2YUbyxgOu
        M0KMSCKJZw/WtiQ+PcEaoyR+cnzsw/7c3SXnUrY2NnxMChj5YgTtPb5IiR8eHKQ8PUkwKh86X3R0cMAY
        9ASQ+F6/zxSDEg9yB+jAmFUgdJNXl5e5RIxIIolnD9a2JD493hogSLyYy+3U6z9//PAxMODuzo4PM9Ze
        jtYh+sufPwG0G/QEoL/tapXrLkbiOAdhVeyBD/j96xcG1+dnZzfX1z4dID05r4Jm5mMwWE7uHSW+USqF
        DgPDbWblae3s+DBQ39oKMWIoknj2YG1L4tMTxHF3ewtLGrfPM9oeqBlaD5kQrIUc9vf21l9+eza/snKw
        vx9mMG5//8ZJYQGIP/32zfAxAHlyEYCFEY8y2Mcf5+chnpEGrg9sE2CzXPZlwP+Dfp9lAINuNzh3Z3ub
        Sw00Mx+A8TL/x7p/7+/hdNif8edu+sVYLxS4lPh8wN3c7ht/PCTx7MHalsSnx4sjnYeHBzTmYj4fcvCk
        v+S9226HPLc2N0MMCDEzfDolTDqjPCEAwOM+xuvYQDPzAeTnxUV1c3OtUEAlAMYjMXQMe0/9kAfx4QnO
        s9PTECNGIYkviP1+f28EqKIQnA5rWxKfHi+OV7m5vu5P8aIxqCpk2Gm1QgwIMbOSeK1S8WG/f/0a2t8E
        n2K07o0M0My4lBwdHPgRvQdbuXNfKAWoxlCHuEQIokdpfYBIQRJfBDB4ypm/vbUV4tPhipL49HhxjMnd
        7W3FzVGkkH96qwkkWCoUymtrIGSFLjysAkLMrCR+8FK+Q/sPA373kWHAjmbml4LLnz99QJIwukfHgArx
        AbCED7h+mvcXYyKJL4Kh5yrZWFsL8elwRUl8erw7AOpwo1QytqtVtN7b379DDPhzd5f+Tlq49fjw8PfN
        DSIxsA2z4eTs27ewIggxs5I4VMuY5Pja8/3sjJHg6PDQL0UV+aWgNew2rwcjGNSDXwUV6wNCJXdTd1kE
        JPFFIIkvLd4dYKgxYfMrZ0Dj+vJy6NXVTr3udZnOIiU+tDcahzAtjmYWAlAGHzCU05c3bO///OFkTvLR
        TH3HZyIk8UUgiS8tQR+jjFnI5W5fTjKA8HpOtHD/DPU4LFLiYdJ5fMJsCZpZCBjnhzIatVpYq/o8691/
        OdmiuZRJkcQXgSS+tHh9gBRj7jYaIfjb8bEPGGpwDDlPjo567TaMjwFm+AbjIiUewsaHD30baGYhYByJ
        4/QPz6GzuYbH8GvDntgRKUjii0ASX1q8PkC6McO3Wm5vb7lou1r1iwB83ajX0ewZA4LIFjoSdzEYlV9d
        XmKIPQ6DXs/ng2bGfIxxJA7C13lQP5b+x9WqHg9/A5L4IpDElxbqw0g3pr3dycNF309PffrD379DXxLy
        jhL3hUfxiqNvbKaDZsZ8jDElXkq8znerXA7TLN9OTsJa4lWWQuKNajW8OPttJH9UaPF02+1QKpB+hVjI
        5UI8aG5vh5wJV5TEp8cbBKQbMzxkgoE5F4Xbhscvn+gg7yjx66srH5byvdN00Mx8PmBMicMA5y+fe9kf
        DM5edn7++6ViTN5f4v3Ut1NORHVzM2S+eGb4JYWQM2GAJD493iAgxZjt3d0QfO4e2wi3DYe+5gknQugG
        xpF4+mFNSjx845+cHB35sFFf9nkVlMfnA8aUOECkryh0aX6G6vryMsSLcZDEZ4wkni1oEGOUxEuFQnjS
        Gfh3S4VFRwcHXESS3cBQiYfv2lylfpVmI/GGqVEnFIbePgykfN8nBTSzkM/4EgeXo5+/THnBoUhBEp8x
        kni2CB4ZKvH61tafxGw4nO7foxKmU/7e34cvJWLIHO6LgqESD3MOcDTOEZw+IcwoFYthovnu9naoVZFD
        ECguC06Oj0d9l3h1ZcW/Z5GgmflMwEQSR88RVid6PPxtSOIzRhLPFsEjF+fnGC+3mk2Alnl6fHxzdRXe
        3Qog1t2X7+kONzbBr+trCAsdwM729unJSZhIMYZKPHxJHWBzv25uoGAUpvty+FzI5ZKXCND69dPDJ+ha
        vBlxgiSLAemj8INez/Z6r98/OTr6eXGBTPykP0EzCzlMJPG11dWhVZF805YYE0l8xkji2SKoZBygVHsf
        rAdtL0xrDCUMxmHPkA9YLxaHas7oJV49ePxysjsQhrfddjsl8yTJ0TGaWYiZSOIATgg5oOo2JsxEEEl8
        xkji2SLY5FVg4Uq5jMYc8smN8UMNlxcX1ZevEvz58ns0BjJPao4kJZ5fWQkPvXiSFm42Gg9jf3tzu1YL
        q6OZhZhJJb65vh46Ely1pLwhTqQjic8YSTxbeJWkAHfjer+9u7s2+n3i0NDuzs7QV5T8ubvrdTqFXC6M
        slO+Yo4uYeiQGSdUiATQ6EXi1yGMoQ/tIf7o4CA5D+O5u709+/ZtHiNx5Pnvy11DxYYYMT6S+IyRxLNF
        u9mEXk+Oj7+dnJydnmJIa0DZSDk8OOi22ym/7Ztk9evXTquFDJHJ1eXl6clJ8sdxxgRZ9TudH+fnViSU
        BzmnPBeItocCY6OP5T8/Pz48TP7AZqD+9KZG5Gyb+H56enx0hAoZ9Zzi9MAD4bd+sN0QIyZCEp8xkrgQ
        KaBb8gYHQ3+wVIzP+0sc4ChiRDA9y/CNTfRJoVQg3ezFfD7EA31jU3wwYIBGvR5u7V6P+E19MT5LIfEP
        j96dIj45GKkcHRyEB3ge/v7VQynTI4kvAklcfFqg74P9/fthN1HTzwsxJpL4IpDExael1WwGdxunemHh
        jJDEF4EkLj4tG6VSeFby34eHi/NzPRg+KyTxRSCJi09LIZ8PNzMHvR5sEMLEm5HEF4EkLj4zPy8u4G6M
        x7+fnuqN4TNHEl8E+4NBqVAo5vND2a5WQ3w6rG1JXGSCRq3WabUKuVxIFzNBEl8QqIdRhMhXYW1L4kII
        STx7sLYlcSGEJJ49WNuSuBBCEs8erG1JXAghiWcP1vYyS5xFqm9thUUfEt6d7ibe9/154EGf30sQRRJJ
        PHuwthcs8dWvX/f6/bBFT7vZZDATJfElwUqIYzS/b9lYDYBXJQ4blItFFIYtqt/p4GN1czNEileRxLMH
        a1sSXx6WXOLFfJ5HpDK3J7W5iXSJoyH12m2YgfEEDUzf5JwUSTx7sLYlcbC2uorh27uP4JZc4uuFAo/I
        1tzqiptIkTg80G21GBmA3BEQVpkJyLa8tlavVpO/VZR1JPHswdp+R4nXKpXNUilQKhQYzCLNVeK7jYZt
        Jfz2/OJZ/umU9u7uwWCANoNReVg0K6wGQIrEK+Uyw3qdDnrfx8azvo52gqprJH7Sc1b0u13b6MebsZHE
        swdr+x0ljvFvWBpgkeYq8X6nY1uRxF8FJyCO4FwnK6wGQIrE0ZewolAkvwgfFzBfL4m/giS+AFjbkrgk
        vlRYDYAUiWP0bTEz/CHDcWDZJPFXkMQXAGs7oxJHPlsbG53nidFuq4ULajSPEAYwLoMOWjs79sN7UDb+
        N0G0m01bPdB7cihWtMrZHwxs+LlTr+N/P2sPivn8Tq1mPQGWPpZkfT1lMPgYX6/bTTlUBXaBJvISx76g
        kJ2nISci0cGMem0IIkuFwu7OjlUsSoJ8UGAfwymjSrmM+HqlYh7EX0tBDMq8WS5bwfrdbqNWC5kAywQk
        f5weqyPR6vkxh6d65uTY/y9tNgdPMxIIwD4OrShuIk3i7bbFYBNhkYezH8lXHqIwtghwagg1jL1mCVH5
        KCFWhHwOBgPGe8LUDXJA5VvxsAqaip8eBLyvYP20HWI0Gxy7ZqPBCsda2DUkYhH+md/kFZHEswdrO4sS
        RxMf+lOoODGCFHDO8Ez22MmfLnFg6z42v1yOd9K8xKFjLLV0D1ZMGhBlg2qT8TgEFuAlDjuESIQl8wTY
        lyF59vu+erdrNUuHsq1j+I+9PTNRsjZYD4SLgsQho6H13Hz+kX6OnQMoDDMxuChF4uyTsOOotLCUYLzM
        sFB1OBC2CBVlbQZ7BGNaogfVOKbEsblkDth0o15nDLB0HGLEhwNnFZ5Mx8eU2pgJknj2YG1nTuI45fwI
        CwrDYJaN3p9UGL9wWwAxNkjE/3Y5DMUwhQGAmqbEd91PTnMpnQsex+DtNtZlCtb1PQqabrDkfr9vlU+R
        MUMsYqk86EiYocHfwkY88sEm6BEUxs4aQIn7EhKskjS4gV6K2wJM9xLHcfTysmq0//nOWKvAx1pqtYAv
        RrAw01O0hQEyw4Dd21xNDOrRAFiNYSssgB1NdNKoc0uxQ4krCayL/3Hg0Gjx0ZcZ6fgI2DJRWm4LLkaz
        ZL+F9LLbF0tEDsD+9zzeOh526FEA5jAPJPHswdp+R4kPxT+8xUQvcWoLJwnP28rGhiUiczQSpOAvTkVL
        xGBzZ3ub0xHYhB+X4fSwsOSceBhd4iOuea0wMBdPNliJGaIXYTyGe5YIoDOmY4sbzxIs5nIUYugV8HGz
        VKpVKv5s9z0fy4C/VN6jcZ6LTYdS4gBVhHSE+aICbAXpqDc/EkTz8F0Rg1lmxNvsAcBakD7rGYXnuige
        6s0ODUA6R9ODbpfpwBJB+tgTG2KkYeUPHSfNi3+4FVzJcS1cmiAFu2wfUTnMAVUU5ty5lg0CyGMlPLci
        XnwgkeN9HPHcc7ClgMfq2t5GGPqkIHQ0MxgP15GsW1BZX7cc5oEknj1Y29mSOFdHkwgThZwftxMP+dhH
        4IfnScaUOKyB5sdFfEACQMRMB/91Hm4RT3L840Xj8RLfepKL4TsAk45BD4bxMrs01ImleIkz58ezyR0L
        n3P1OQfIBXXOdAZT4n5QHEa76bAHGrWJdImj8PVKxXLwwHo+N7QcLuL0tFe2HVN2CclrHY/FgCBxVsKj
        rF0jAexFuHX7CGxOz/CHGFdUzGTNfcEqvRlPiSSePVjb2ZI47wv5gZXBcaWdGxQiIn1YknEk/tgCnan9
        XiTXgn1sEcDpjRTEUzebzpUBlhnbDYvoAo4N0RMwz9CfsQA4uJZCiYec/XjWu89PRPgdZzAlzhySZR5K
        uViEsHBAMQjlJvymLQWkS9xAT4AChGEsPO7bBo8UtmspaCGWwmNH16NIGEr7XfZYDAgS59Vhshtjj86G
        bR9BmJJibaCRMx2w+2+9vKM+WyTx7MHafkeJ+5mBobBIlHjDjVVHYTbhJG9SsoFxJM4hrYGTnOLwA1jC
        pdUn52Lwax/BKEEAShxnfljEy+oa+zPXVaRgwZR4GGlyi4w0/A6mS5wXQOFqIIAzd7NUsgc/krxZ4iSo
        3M88sCXY9DfgYbUuFqAphp4AV1qhawRcGiSOWuWiUbALYYrfQd9rhgu1/8qfuAk8QyTx7MHazpbE4Vkm
        jsIkzhFQ/bVr/HEkHhbBazzlkqc6YK1ayTnQAz4sMJHE/XxRChY8P4lznGjd1Sg4Vh3K9BIHpUKBB8Xv
        JnpZS8Qe4SO2ZR+BWcXwqxv4yIZncFGQOJtQCpK4JD5jWNvZkjhdcPD0/OxQtp+COTjCZbutO4o3SvzZ
        cUNdQwOa2mqVin0EXliBiSQOjVoKCDVAWOw5Svy5YCkzttQoTmQcQdQYPIV64CZmInGA/bV1sSEmInP6
        ESP0+vOxSDqxmMvhSAUj+0kPJgaJ/3fD4+m5lKFwd5iJJC6mgrWdLYnXeEvq5VMTSXDaWCTOybAo8AaJ
        ewElpxE4cQ/sgn3DCddP+gcmkjhqz1JAmEVNMj+JUzEQGcMCjMFBYeI8JM77Il7igH0//uFj8psjDgQk
        A0dTqf7QWwoIEmee6XNKBjP5vBLnHR7xZnwTz5bEC89tHX/TT3KcZlw9PCgWoMSD4B4XjZA4oFVREu8g
        gJPNFgEakMIK0+ueiSQOeC68enrPT+IoDxOD2sjQKRdka4cSTCrxof33ozeem1aokNLz/QPUmG0UkemD
        AHrfHy9LAag3JgJW436/HxpDEmbySSUOcEIOul0EiLeBdszpOYAUX9WAi+aBlziusjGETMJgFokSR9ug
        WMOOAPQK7Bi8I/APcrBFKADGwiXXf/hrcGSIAjCTFIn7R+uwlCcecuB2/Vo7blIYAzeUAfsCsDmOzSeV
        ODsqbBGDUG/b/NPTx/w4P4mHesbpaTcJrJ6tJrE7FoAdt7VQXax2MKnEsS46BhxTFMPaDHaWt1hBuNxB
        /twdI3Sl2BZywOFgCirKImFzJrI94J9ysYjtWuVgN1kJyDlsHZE+ZwsDn1fiYra8o8RHwWCmUOJgY22N
        zR3gfwylgWVLTYBHx7lIjx9J8ZloQvmmSBy0ns8ugK233Jf0APoYfzbiPA8eIRC0xUwqceTPywjDqoLF
        Zl81P4kDzjInsWsgP1pHtaCiQhuYVOJhrwOoPS9Nw/cZIDxTZPMwaEsQZSieNzKH54QXH2iiPh2nlR0L
        q0ZUETNhzKeTOAdHYobg5PH1bISY2TK9xIEfBQfCzCwnSQNeymhvQQpjShwrcrwWwIo2IPWM8ji8ZgGT
        ShwkPe6haucqcbCT+P6kYXPEQw86jhR23P6fVOK+Fw+g6oIEDRwOxqAwwfK8VgjA2j7Sj7gNShxhoyoB
        NF37YeIHl3iyXaLxJc8KMQ2oz6SDKJQ5MROJg1KhgHMG7cSaPv4Oul2MofwcggHd4DTgE8oYH2C0HsJQ
        FYixrCAvXkGnSxygrWJMh2q0YQfWxf/VSsVbyYMNoV+Bkbkt6AMptvQNEgfYFlSC7fLtH6hhXNSjGPTv
        vCUOMGL19YyGZLNGthSZ4MLF8kTM4+TP1684XhZcc5PplgJSJI6jjz3yu4zNYes4Fsk3qBCWLXn7sVws
        4qDjcNtxscIn2xLAjmO7lg8OOiVuYH+xU9wQ9hd9FXL21WWLwEeWOPATiB7UspgJHAQFcFaHYyHEB8A/
        Bp7SPXxaZi9x9NuscbEwUOe63BEfD3/95++aCDJ7iYO6u9ATiyF5mSlE1llbXYW4rYUfDAYapgxlLhLP
        ffni7/6LeTNq2leI7LJdrXLeXI08hblIHMDjo54uELMF9YzaDvUvRNbpP99jBJ1WS418FPOSuLFeKEAx
        fOJSzIqDvb1ep4O61X0e8VHh4zftZnPUI0MCzFfiQgjxNjAExAA8fLVHJJHEhRAiw0jiQgiRYSRxIYTI
        MJK4EEJkGElcCCEyjCQuhBAZRhIXQogMI4kLIUSGkcSFECLDSOJCCJFhJHEhhMgwkrgQQmQYSVwIITKM
        JC6EEBlGEhdCiAwjiQshRIaRxIUQIsNI4kIIkWEkcSGEyDCSuBBCZBhJXAghMowkLoQQGUYSF0KIDCOJ
        CyFEhpHEhRAis/zzz/8BQagURRFBAVYAAAAASUVORK5CYII=
</value>
  </data>
</root>